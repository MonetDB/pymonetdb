name: Linux Test all Pythons
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      DBFARM: /var/lib/monetdb
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Debian packages
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y software-properties-common curl make
          curl https://www.monetdb.org/downloads/MonetDB-GPG-KEY | sudo apt-key add -
          sudo add-apt-repository 'deb http://dev.monetdb.org/downloads/deb/ focal monetdb'
          sudo apt-get update -qq
          sudo apt-get install -y monetdb5-server
      - name: Start MonetDB
        run: |
          sudo mkdir -p -m 770 ${{ env.DBFARM }}
          sudo chown -R monetdb.monetdb ${{ env.DBFARM }}
          sudo -u monetdb monetdbd create ${{ env.DBFARM }}
          sudo -u monetdb monetdbd set control=yes ${{ env.DBFARM }}
          sudo -u monetdb monetdbd set passphrase=testdb ${{ env.DBFARM }}
          sudo -u monetdb monetdbd start ${{ env.DBFARM }}
          sudo -u monetdb chmod o+rwx /tmp/.s.mero*
      - name: Create MonetDB test database
        run: |
          sudo -u monetdb monetdb create demo
          sudo -u monetdb monetdb set embedpy3=true demo
          sudo -u monetdb monetdb release demo
          sudo -u monetdb monetdb start demo || true
          sudo cat /var/lib/monetdb/merovingian.log
          sudo -u monetdb monetdb status
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run tests
        run: make test
