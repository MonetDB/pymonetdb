name: Windows Test
on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  runtests:
    runs-on: windows-2022
    env:
      uri: https://www.monetdb.org/downloads/Windows/Latest/MonetDB5-SQL-Installer-x86_64-20230718.msi
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'

      # Unfortunately msiexec does seem to work on the windows runner.
      # 7zip is able to unpack .msi files but it loses the directory structure.
      # We fix that in the next step.
      - name: Download MonetDB
        run: |
          $msifile="c:\monetdb.msi"
          #New-Item -Path 'C:\test.log' -ItemType File
          (New-Object System.Net.WebClient).DownloadFile("${{ env.uri }}","$msifile");
          $procMain = Start-Process "$msifile" -ArgumentList '/quiet /passive /qn /norestart INSTALLLEVEL=1000 MSIRMSHUTDOWN=2' -Wait
          #$procMain = Start-Process "$msifile" -ArgumentList '/quiet /passive /qn /norestart INSTALLLEVEL=1000 MSIRMSHUTDOWN=2 /L*xv c:\test.log' 
          #$procLog = Start-Process powershell 'Get-Content -Path c:\test.log -Wait' -NoNewWindow -PassThru
          #$procMain.WaitForExit()
          #$procLog.Kill()
      - name: Setup virtual environment
        run: |
          python -m venv venv
          venv\Scripts\Activate.ps1
          python -m pip install -r tests/requirements.txt

      # Script tests/windows_tests.py starts an mserver in the background
      # and runs pytest, excluding the Control tests.
      - name: run the tests
        run: |
          venv\Scripts\Activate.ps1
          mkdir ${{ runner.temp }}\dbfarm
          python tests/windows_tests.py "C:\Program Files\MONETDB\MonetDB5" ${{ runner.temp }}\dbfarm demo 50000
          echo ""; echo ""; echo "================ SERVER STDERR: ==================="; echo ""
          type ${{ runner.temp }}\dbfarm\errlog

